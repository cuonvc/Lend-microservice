server:
  port: 8081

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_CLIENT_HOST}:${EUREKA_CLIENT_PORT}/eureka/

spring:
  application:
    name: AUTH-SERVICE
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO}
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: 033f662cdda792dd4afd
            client-secret:
          google:
            client-id: 73739720220-qblvgnhnm505ovttjsp1eje7qf1ajr0n.apps.googleusercontent.com
            client-secret:

  kafka:
#    listener: PLAINTEXT://kafka:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
  cloud:
    function:
      definition: avatarProcess
    stream:
      bindings:
        avatarProcess-in-0:
          destination: user-avatar-response
          content-type: application/json
      kafka:
        binder:
          brokers: ${KAFKA_HOST}:${KAFKA_PORT}

    compatibility-verifier:
      enabled: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      url: ${REDIS_URL}
  cache:
    type: redis

  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 5MB